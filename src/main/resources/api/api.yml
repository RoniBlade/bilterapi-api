openapi: 3.0.1
info:
  title: Biliter API
  description: ""
  version: 1.0.0
servers:
  - url: https://api.bileter.ru/ekp
paths:
  /bileter/changes-show:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangesShowRequest'
      summary: Список шоу с изменениями
      operationId: postChangesShow
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeShowResponse'
        400:
          description: Invalid data.
          content: { }
      x-codegen-request-body-name: postChangesShow
  /bileter/data-show:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataShowRequest'
      summary: Информация о шоу
      operationId: postDataShow
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataShowResponse'
        400:
          description: Invalid data.
          content: { }
      x-codegen-request-body-name: postDataShow
  /bileter/changes-building:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangesBuildingRequest'
      summary: Информация о шоу
      operationId: postChangesBuilding
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangesBuildingResponse'
        400:
          description: Invalid data.
          content: { }
      x-codegen-request-body-name: postChangesBuilding
  /bileter/data-building:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataBuildingRequest'
      summary: Информация о шоу
      operationId: postDataBuilding
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataBuildingResponse'
        400:
          description: Invalid data.
          content: { }
      x-codegen-request-body-name: postDataBuilding

components:
  schemas:
    ChangesShowRequest:
      type: object
      properties:
        auth:
          type: string
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
        params:
          date:
          $ref: '#/components/schemas/DateEvent'
    DateEvent:
      type: object
      properties:
        BeginTime :
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}$'
        EndTime:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}$'

    ChangeShowResponse:
      type: object
      properties:
        jsonrpc:
          type: string
          example: "2.0"
        result:
          $ref: '#/components/schemas/ChangeShowArray'
    ChangeShowArray:
      type: array
      items:
        $ref: '#/components/schemas/ChangeShowData'
    ChangeShowData:
      type: object
      properties:
        IdShow:
          type: integer
          format: int64
        СhangesTime:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}$'

    DataShowRequest:
      type: object
      properties:
        auth:
          type: string
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
        params:
          type: object
          properties:
            IdShow:
              type: array
              items:
                type: integer
                format: int64
    DataShowResponse:
      type: object
      properties:
        jsonrpc:
          type: string
          example: "2.0"
        result:
          $ref: '#/components/schemas/DataShowArray'
    DataShowArray:
      type: array
      items:
        $ref: '#/components/schemas/ShowInfo'
    ShowInfo:
      type: object
      properties:
        IdShow:
          type: integer
          format: int64
        AgeRestriction:
          type: integer
        Name:
          type: string
        ShowType:
          type: array
          items:
            type: array
            items:
              type: string
        IdCity:
          type: integer
          format: int64
        City:
          type: string
        IdBuilding:
          type: array
          items:
            type: integer
            format: int64
        ImageShow:
          type: string
        DescriptionShow:
          $ref: '#/components/schemas/DescriptionShow'
        ShowUrl:
          type: string
        ReviewUrl:
          type: string
        BuyUrl:
          type: string
    DescriptionShow:
      type: object
      properties:
        TextDescriptionShow:
          type: string
        ReviewShow:
          type: string
          nullable: true
        ActorShow:
          type: string
        Duration:
          type: string
        ProducerShow:
          type: string
        AuthorShow:
          type: string
        StartDateTime:
          type: array
          items:
            type: string
            pattern: '^\d{2}:\d{2} \d{2}\.\d{2}\.\d{4}$'
        EndDateTime:
          type: string
          pattern: '^\d{2}:\d{2} \d{2}\.\d{2}\.\d{4}$'

    ChangesBuildingRequest:
      type: object
      properties:
        auth:
          type: string
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
        params:
          date:
          $ref: '#/components/schemas/DateBuldings'
    DateBuldings:
      type: object
      properties:
        BeginTime :
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}$'
        EndTime:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}$'

    ChangesBuildingResponse:
      type: object
      properties:
        jsonrpc:
          type: string
          example: "2.0"
        result:
          $ref: '#/components/schemas/ChangeBuildArray'
    ChangeBuildArray:
      type: array
      items:
        $ref: '#/components/schemas/ChangeBuildData'
    ChangeBuildData:
      type: object
      properties:
        IdBuilding:
          type: integer
          format: int64
        СhangesTime:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}$'
    #////////////////////////////////////////////////////
    DataBuildingRequest:
      type: object
      properties:
        auth:
          type: string
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
        params:
          type: object
          properties:
            IdShow:
              type: array
              items:
                type: integer
                format: int64
    DataBuildingResponse:
      type: object
      properties:
        jsonrpc:
          type: string
          example: "2.0"
        result:
          $ref: '#/components/schemas/DataBuildsArray'
    DataBuildsArray:
      type: array
      items:
        $ref: '#/components/schemas/ShowBuildsInfo'
    ShowBuildsInfo:
      type: object
      properties:
        IdBuilding:
          type: integer
          format: int64
        Name:
          type: string
        LogoBuilding:
          type: string
        IdCity:
          type: integer
          format: int64
        City:
          type: string
        Address:
          type: string
        MetroBuilding:
          type: string
