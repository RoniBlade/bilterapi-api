openapi: 3.0.1
info:
  title: OpenAPI билетер
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.2
servers:
  - url: https://api.bileter.ru/ekp
    description: Test server
paths:

  /changes-show:
    post:
      summary: Метод добавления нового зрелища в БД
      description: Метод предназначен для сохранения в БД данных по новому зрелищу.
      operationId: getDataOfSpectacles
      tags:
        - Data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataOfSpectacles'
      responses:
        '200':
          description: Подтверждение успешного сохранения
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataOfSpectacleAnsw'
        '400':
          description: Invalid data.
          content: { }
          x-codegen-request-body-name: postDataShow

  /data-show:
    post:
      summary: Метод добавления нового конкретного зрелища
      description: >-
        Метод предназначен для сохранения в БД данных по новому конкретного
        зрелищу.
      operationId: getDataOfSpecificSpectacles
      tags:
        - Data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataOfSpecificSpectacles'
      responses:
        '200':
          description: Подтверждение успешного сохранения
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataOfSpecificSpectaclesAnsw'
        '400':
          description: Invalid data.
          content: { }
          x-codegen-request-body-name: postDataShow

  /changes-building:
    post:
      summary: Метод добавления нового здания в БД
      description: Метод предназначен для сохранения в БД данных по новому зданию.
      operationId: getDataOfBuildings
      tags:
        - Data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataOfBuildings'
      responses:
        '200':
          description: Подтверждение успешного сохранения
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataOfBuildingsAnsw'
        '400':
          description: Invalid data.
          content: { }
          x-codegen-request-body-name: postDataShow

  /data-building:
    post:
      summary: Метод добавления нового конкретного здания в БД
      description: Метод предназначен для сохранения в БД данных по конкретному зданию.
      operationId: getDataOfSpecificBuildings
      tags:
        - Data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataOfSpecificBuidings'
      responses:
        '200':
          description: Подтверждение успешного сохранения
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataOfSpecificBuidingsAnsw'
        '400':
          description: Invalid data.
          content: { }
          x-codegen-request-body-name: postDataShow

components:
  schemas:
    DataOfSpectacles:
      type: object
      properties:
        auth:
          type: string
        id:
          type: integer
        jsonrpc:
          type: string
        method:
          type: string
        content:
          $ref: '#/components/schemas/Params'

    DataOfSpectacleAnsw:
      type: object
      properties:
        jsonrpc:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/ObjectForFirstAnsw'

    DataOfSpecificSpectacles:
      type: object
      properties:
        auth:
          type: string
        id:
          type: integer
        jsonrpc:
          type: string
        method:
          type: string
        IdShow:
          type: array
          items:
            type: integer

    DataOfSpecificSpectaclesAnsw:
      type: object
      properties:
        jsonrpc:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/ObjectForSecondAnsw'

    DataOfBuildings:
      type: object
      properties:
        auth:
          type: string
        id:
          type: integer
        jsonrpc:
          type: string
        method:
          type: string
        content:
          $ref: '#/components/schemas/Params'

    DataOfBuildingsAnsw:
      type: object
      properties:
        jsonrpc:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/ObjectForThirdAnsw'

    DataOfSpecificBuidings:
      type: object
      properties:
        auth:
          type: string
        id:
          type: integer
        jsonrpc:
          type: string
        method:
          type: string
        IdBuilding:
          type: array
          items:
            type: integer

    DataOfSpecificBuidingsAnsw:
      type: object
      properties:
        jsonrpc:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/ObjectForFourthAnsw'


    Params:
      type: object
      properties:
        BeginTime:
          type: string
          format: '1137-14-77 54:95:52'
        EndTime:
          type: string
          format: '1137-14-77 54:95:52'

    ObjectForFirstAnsw:
      type: object
      properties:
        IdShow:
          type: string
        СhangesTime:
          type: string
          format: '1137-14-77 54:95:52'

    ObjectForSecondAnsw:
      type: object
      properties:
        IdShow:
          type: string

        AgeRestriction:
          type: integer

        Name:
          type: string

        ShowType:
          type: array
          items:
            type: string

        City:
          type: string

        IdBuilding:
          type: array
          items:
            type: integer

        ImageShow:
          type: string

        DescriptionShow:
          type: object
          items:
            $ref: '#/components/schemas/DescriptionShowObject'

    DescriptionShowObject:
      type: object
      properties:
        TextDescriptionShow:
          type: string

        ReviewShow:
          type: string

        ActorShow:
          type: string

        Duration:
          type: string

        ProducerShow:
          type: string

        AuthorShow:
          type: string

        StartDateTime:
          type: array
          items:
            type: string
            format: 19:00 22.02.2020

        ShowUrl:
          type: string

        ReviewUrl:
          type: string

        BuyUrl:
          type: string

    ObjectForThirdAnsw:
      type: object
      properties:
        IdBuilding:
          type: string
        СhangesTime:
          type: string
          format: '1137-14-77 54:95:52'

    ObjectForFourthAnsw:
      type: object
      properties:
        IdBuilding:
          type: string
        Name:
          type: string
        LogoBuilding:
          type: string
        IdCity:
          type: string
        City:
          type: string
        Address:
          type: string
        MetroBuilding:
          type: string




