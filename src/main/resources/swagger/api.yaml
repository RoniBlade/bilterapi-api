openapi: 3.0.1
info:
  title: API bileter.ru
  description: 'Схема взаимодействия с API bileter.ru

Все запросы к API осуществляются через JSON RPC. Адрес для всех запросов единый: 
https://api.bileter.ru/ekp
Каждый запрос к API является POST запросом, где тело запроса это текст в формате JSON:'
  termsOfService: https://api.bileter.ru/ekp
  contact:
    email: elsukov.nikolai@aisa.ru
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: 'https://api.bileter.ru/ekp'

paths:
  /:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'

components:
  schemas:
    Request:
      type: object
      properties:
        auth:
          type: string
        id:
          type: string
        jsonrpc:
          type: string
          default: '2.0'
        method:
          type: string
        params:
          oneOf:
            - $ref: '#/components/schemas/TimeParams'
            - $ref: '#/components/schemas/IdShowParams'
            - $ref: '#/components/schemas/IdBuildingParams'

    Response:
      type: object
      properties:
        jsonrpc:
          type: string
        id:
          type: string
        result:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/ChangesShowResponse'
              - $ref: '#/components/schemas/ChangesBuildingResponse'
              - $ref: '#/components/schemas/DataShowResponse'
              - $ref: '#/components/schemas/DataBuildingResponse'

    TimeParams:
      type: object
      properties:
        BeginTime:
          type: string
          pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'
        EndTime:
          type: string
          pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'

    IdShowParams:
      type: object
      properties:
        IdShow:
          type: array
          items:
            type: integer

    IdBuildingParams:
      type: object
      properties:
        IdBuilding:
          type: array
          items:
            type: integer

    ChangesShowResponse:
      type: object
      properties:
        IdShow:
          type: integer
        ChangesTime:
          type: string
          pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'

    ChangesBuildingResponse:
      type: object
      properties:
        IdBuilding:
          type: integer
        ChangesTime:
          type: string
          pattern: '\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}'

    DescriptionShow:
      type: object
      properties:
        TextDescriptionShow:
          type: string
        ReviewShow:
          type: string
        ActorShow:
          type: string
        Duration:
          type: integer
        ProducerShow:
          type: string
        AuthorShow:
          type: string
        StartDateTime:
          type: array
          items:
            type: string
            pattern: '\d{2}:\d{2} \d{2}.\d{2}.\d{4}'
        EndDateTime:
          type: string
          pattern: '\d{2}:\d{2} \d{2}.\d{2}.\d{4}'

    DataShowResponse:
      type: object
      properties:
        IdShow:
          type: integer
        AgeRestriction:
          type: integer
        Name:
          type: string
        ShowType:
#          это не точно
          type: object
#          items:
#            type: string
        IdCity:
          type: integer
        City:
          type: string
        IdBuilding:
          type: array
          items:
            type: integer
        ImageShow:
          type: string
        DescriptionShow:
          $ref: '#/components/schemas/DescriptionShow'
        ShowUrl:
          type: string
        ReviewUrl:
          type: string
        BuyUrl:
          type: string

    DataBuildingResponse:
      type: object
      properties:
        IdBuilding:
          type: integer
        Name:
          type: string
        LogoBuilding:
          type: string
        IdCity:
          type: integer
        City:
          type: string
        Address:
          type: string
        MetroBuilding:
          type: string